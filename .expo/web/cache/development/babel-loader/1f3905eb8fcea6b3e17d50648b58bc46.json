{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\screens\\\\Database\\\\classdb.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport Classes from \"../../assets/classes/classes\";\nimport avatars from \"../../assets/avatars/avatars\";\nimport getChampBorderColor from \"../../helpers/getChampBorderColor\";\nimport { pageTheme } from \"../../styles/page\";\nimport RefactorFileName from \"../../helpers/refactorFileName\";\nexport default function ItemBuilder(_ref) {\n  var route = _ref.route;\n  var classes = route.params.classes;\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: pageTheme.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Class Builder\"), classes.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: pageTheme.section,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: pageTheme.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, item.name), React.createElement(View, {\n      style: pageTheme.fdWrapperAIC,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarMed,\n      source: Classes[RefactorFileName(item.name, \"trait\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: [pageTheme.flexWrap, {\n        marginLeft: 5\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, item.units.map(function (item, index) {\n      return React.createElement(View, {\n        style: [pageTheme.darkBGSmall, {\n          backgroundColor: getChampBorderColor(item),\n          margin: 2.5\n        }],\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: pageTheme.avatarMed,\n        source: avatars[RefactorFileName(item)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }));\n    }))), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: pageTheme.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Bonuses\"), item.detail.map(function (item2, index2) {\n      return React.createElement(View, {\n        key: index2,\n        style: [pageTheme.fdWrapperAIC, pageTheme.darkBGMedium, {\n          justifyContent: \"flex-start\",\n          margin: 2.5,\n          paddingHorizontal: 10\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [pageTheme.regularText, {\n          marginTop: 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      }, \"x\", item.count[index2]), React.createElement(Text, {\n        style: [pageTheme.regularText, {\n          marginLeft: 15,\n          marginTop: 0,\n          flex: 1\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, item2));\n    })));\n  })));\n}","map":{"version":3,"sources":["D:/Repos/TFTLAB/screens/Database/classdb.js"],"names":["React","ScrollView","Classes","avatars","getChampBorderColor","pageTheme","RefactorFileName","ItemBuilder","route","classes","params","page","title","map","item","index","section","header","name","fdWrapperAIC","avatarMed","flexWrap","marginLeft","units","darkBGSmall","backgroundColor","margin","detail","item2","index2","darkBGMedium","justifyContent","paddingHorizontal","regularText","marginTop","count","flex"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text, View, Image } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport Classes from \"../../assets/classes/classes\";\r\nimport avatars from \"../../assets/avatars/avatars\";\r\nimport getChampBorderColor from \"../../helpers/getChampBorderColor\";\r\nimport { pageTheme } from \"../../styles/page\";\r\nimport RefactorFileName from \"../../helpers/refactorFileName\";\r\n\r\nexport default function ItemBuilder({ route }) {\r\n  const { classes } = route.params;\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={pageTheme.page}>\r\n        <Text style={pageTheme.title}>Class Builder</Text>\r\n        {classes.map((item, index) => (\r\n          <View key={index} style={pageTheme.section}>\r\n            <Text style={pageTheme.header}>{item.name}</Text>\r\n            <View style={pageTheme.fdWrapperAIC}>\r\n              <Image\r\n                style={pageTheme.avatarMed}\r\n                source={Classes[RefactorFileName(item.name, \"trait\")]}\r\n              />\r\n              <View style={[pageTheme.flexWrap, { marginLeft: 5 }]}>\r\n                {item.units.map((item, index) => (\r\n                  <View\r\n                    style={[\r\n                      pageTheme.darkBGSmall,\r\n                      {\r\n                        backgroundColor: getChampBorderColor(item),\r\n                        margin: 2.5,\r\n                      },\r\n                    ]}\r\n                    key={index}\r\n                  >\r\n                    <Image\r\n                      style={pageTheme.avatarMed}\r\n                      source={avatars[RefactorFileName(item)]}\r\n                    />\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            </View>\r\n            <View>\r\n              <Text style={pageTheme.header}>Bonuses</Text>\r\n              {item.detail.map((item2, index2) => (\r\n                <View\r\n                  key={index2}\r\n                  style={[\r\n                    pageTheme.fdWrapperAIC,\r\n                    pageTheme.darkBGMedium,\r\n                    {\r\n                      justifyContent: \"flex-start\",\r\n                      margin: 2.5,\r\n                      paddingHorizontal: 10,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Text style={[pageTheme.regularText, { marginTop: 0 }]}>\r\n                    x{item.count[index2]}\r\n                  </Text>\r\n                  <Text\r\n                    style={[\r\n                      pageTheme.regularText,\r\n                      { marginLeft: 15, marginTop: 0, flex: 1 },\r\n                    ]}\r\n                  >\r\n                    {item2}\r\n                  </Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
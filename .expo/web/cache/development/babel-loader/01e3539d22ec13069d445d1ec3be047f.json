{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\screens\\\\Home\\\\pages\\\\comppage.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport avatars from \"../../../assets/avatars/avatars\";\nimport classes from \"../../../assets/classes/classes\";\nimport origins from \"../../../assets/origins/origins\";\nimport getChampionBorderColor from \"../../../helpers/getChampBorderColor\";\nimport getChampOrigin from \"../../../helpers/getChampOrigin\";\nimport getChampionClass from \"../../../helpers/getChampionClass\";\nimport getCompTraits from \"../../../helpers/getCompTraits\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { pageTheme } from \"../../../styles/page\";\nimport RefactorFileName from \"../../../helpers/refactorFileName\";\n\nvar CompPage = function CompPage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var name = route.params.name;\n  var champions = route.params.champions;\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    scrollEventThrottle: 1,\n    alwaysBounceVertical: false,\n    bounces: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: pageTheme.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, name), React.createElement(View, {\n    style: pageTheme.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Champions\"), React.createElement(View, {\n    style: pageTheme.flexWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, champions.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: {\n        marginRight: 10,\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: {\n        width: 84\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: pageTheme.regularText,\n      numberOfLines: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, item), React.createElement(View, {\n      style: [pageTheme.champAvatarWrapper, {\n        backgroundColor: getChampionBorderColor(RefactorFileName(item))\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarBig,\n      source: avatars[RefactorFileName(item)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: [pageTheme.fdWrapper, {\n        marginTop: 5\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: pageTheme.darkBGSmall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarVerySmall,\n      source: origins[getChampOrigin(RefactorFileName(item))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    })), item != \"Gangplank\" && item != \"Irelia\" ? React.createElement(View, {\n      style: [pageTheme.darkBGSmall, {\n        marginHorizontal: 2\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarVerySmall,\n      source: classes[getChampionClass(RefactorFileName(item))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    })) : React.createElement(View, {\n      style: pageTheme.fdWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, React.createElement(View, {\n      style: [pageTheme.darkBGSmall, {\n        marginHorizontal: 2\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarVerySmall,\n      source: classes[getChampionClass(RefactorFileName(item))[0]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }\n    })), React.createElement(View, {\n      style: pageTheme.darkBGSmall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarVerySmall,\n      source: classes[getChampionClass(RefactorFileName(item))[1]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }\n    }))))));\n  }))), React.createElement(View, {\n    style: pageTheme.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Traits\"), getCompTraits(champions).traits.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, getCompTraits(champions).details[index] != 0 ? React.createElement(View, {\n      style: pageTheme.fdWrapperAIC,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarMed,\n      source: origins[RefactorFileName(item, \"trait\")] != undefined ? origins[RefactorFileName(item, \"trait\")] : classes[RefactorFileName(item, \"trait\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }), React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        color: getCompTraits(champions).colors[index],\n        marginHorizontal: 10\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, \"x\", getCompTraits(champions).counts[index]), React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, getCompTraits(champions).details[index])) : null);\n  }))));\n};\n\nexport default CompPage;","map":{"version":3,"sources":["D:/Repos/TFTLAB/screens/Home/pages/comppage.js"],"names":["React","avatars","classes","origins","getChampionBorderColor","getChampOrigin","getChampionClass","getCompTraits","ScrollView","pageTheme","RefactorFileName","CompPage","route","navigation","name","params","champions","page","title","section","header","flexWrap","map","item","index","marginRight","marginBottom","width","regularText","champAvatarWrapper","backgroundColor","avatarBig","fdWrapper","marginTop","darkBGSmall","avatarVerySmall","marginHorizontal","traits","details","fdWrapperAIC","avatarMed","undefined","color","colors","counts","flex"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text, View, Image } from \"react-native\";\r\nimport avatars from \"../../../assets/avatars/avatars\";\r\nimport classes from \"../../../assets/classes/classes\";\r\nimport origins from \"../../../assets/origins/origins\";\r\nimport getChampionBorderColor from \"../../../helpers/getChampBorderColor\";\r\nimport getChampOrigin from \"../../../helpers/getChampOrigin\";\r\nimport getChampionClass from \"../../../helpers/getChampionClass\";\r\nimport getCompTraits from \"../../../helpers/getCompTraits\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { pageTheme } from \"../../../styles/page\";\r\nimport RefactorFileName from \"../../../helpers/refactorFileName\";\r\n\r\nconst CompPage = ({ route, navigation }) => {\r\n  const { name } = route.params;\r\n  const { champions } = route.params;\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      scrollEventThrottle={1}\r\n      alwaysBounceVertical={false}\r\n      bounces={false}\r\n    >\r\n      <View style={pageTheme.page}>\r\n        <Text style={pageTheme.title}>{name}</Text>\r\n        <View style={pageTheme.section}>\r\n          <Text style={pageTheme.header}>Champions</Text>\r\n          <View style={pageTheme.flexWrap}>\r\n            {champions.map((item, index) => (\r\n              <View key={index} style={{ marginRight: 10, marginBottom: 10 }}>\r\n                <View style={{ width: 84 }}>\r\n                  <Text style={pageTheme.regularText} numberOfLines={1}>\r\n                    {item}\r\n                  </Text>\r\n                  <View\r\n                    style={[\r\n                      pageTheme.champAvatarWrapper,\r\n                      {\r\n                        backgroundColor: getChampionBorderColor(\r\n                          RefactorFileName(item)\r\n                        ),\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Image\r\n                      style={pageTheme.avatarBig}\r\n                      source={avatars[RefactorFileName(item)]}\r\n                    />\r\n                  </View>\r\n                  <View style={[pageTheme.fdWrapper, { marginTop: 5 }]}>\r\n                    <View style={pageTheme.darkBGSmall}>\r\n                      <Image\r\n                        style={pageTheme.avatarVerySmall}\r\n                        source={origins[getChampOrigin(RefactorFileName(item))]}\r\n                      />\r\n                    </View>\r\n                    {item != \"Gangplank\" && item != \"Irelia\" ? (\r\n                      <View\r\n                        style={[pageTheme.darkBGSmall, { marginHorizontal: 2 }]}\r\n                      >\r\n                        <Image\r\n                          style={pageTheme.avatarVerySmall}\r\n                          source={\r\n                            classes[getChampionClass(RefactorFileName(item))]\r\n                          }\r\n                        />\r\n                      </View>\r\n                    ) : (\r\n                      <View style={pageTheme.fdWrapper}>\r\n                        <View\r\n                          style={[\r\n                            pageTheme.darkBGSmall,\r\n                            { marginHorizontal: 2 },\r\n                          ]}\r\n                        >\r\n                          <Image\r\n                            style={pageTheme.avatarVerySmall}\r\n                            source={\r\n                              classes[\r\n                                getChampionClass(RefactorFileName(item))[0]\r\n                              ]\r\n                            }\r\n                          />\r\n                        </View>\r\n\r\n                        <View style={pageTheme.darkBGSmall}>\r\n                          <Image\r\n                            style={pageTheme.avatarVerySmall}\r\n                            source={\r\n                              classes[\r\n                                getChampionClass(RefactorFileName(item))[1]\r\n                              ]\r\n                            }\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </View>\r\n        <View style={pageTheme.section}>\r\n          <Text style={pageTheme.header}>Traits</Text>\r\n          {getCompTraits(champions).traits.map((item, index) => (\r\n            <View key={index}>\r\n              {getCompTraits(champions).details[index] != 0 ? (\r\n                <View style={pageTheme.fdWrapperAIC}>\r\n                  <Image\r\n                    style={pageTheme.avatarMed}\r\n                    source={\r\n                      origins[RefactorFileName(item, \"trait\")] != undefined\r\n                        ? origins[RefactorFileName(item, \"trait\")]\r\n                        : classes[RefactorFileName(item, \"trait\")]\r\n                    }\r\n                  />\r\n                  <Text\r\n                    style={[\r\n                      pageTheme.regularText,\r\n                      {\r\n                        color: getCompTraits(champions).colors[index],\r\n                        marginHorizontal: 10,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    x{getCompTraits(champions).counts[index]}\r\n                  </Text>\r\n                  <Text style={[pageTheme.regularText, { flex: 1 }]}>\r\n                    {getCompTraits(champions).details[index]}\r\n                  </Text>\r\n                </View>\r\n              ) : null}\r\n            </View>\r\n          ))}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CompPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\screens\\\\Home\\\\pages\\\\traitpage.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport classes from \"../../../assets/classes/classes\";\nimport origins from \"../../../assets/origins/origins\";\nimport avatars from \"../../../assets/avatars/avatars\";\nimport getChampBorderColor from \"../../../helpers/getChampBorderColor\";\nimport { pageTheme } from \"../../../styles/page\";\nimport RefactorFileName from \"../../../helpers/refactorFileName\";\n\nvar TraitPage = function TraitPage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var name = route.params.name;\n  var desc = route.params.desc;\n  var count = route.params.count;\n  var detail = route.params.detail;\n  var units = route.params.units;\n  var type = route.params.type;\n  var champions = route.params.champions;\n  var scrollY = new Animated.Value(0);\n  var headerHeight = scrollY.interpolate({\n    inputRange: [0, 300],\n    outputRange: [175, 35],\n    extrapolate: \"clamp\",\n    useNativeDriver: true\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.View, {\n    style: [pageTheme.absoWrapper, {\n      height: headerHeight,\n      padding: 10\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: pageTheme.avatarBig,\n    resizeMode: \"contain\",\n    source: type == 0 ? classes[RefactorFileName(name, \"trait\")] : origins[RefactorFileName(name, \"trait\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: pageTheme.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, name)), React.createElement(Animated.View, {\n    style: {\n      flex: 1,\n      paddingBottom: headerHeight,\n      transform: [{\n        translateY: headerHeight\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    scrollEventThrottle: 1,\n    alwaysBounceVertical: false,\n    bounces: false,\n    style: {\n      padding: 10\n    },\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrollY\n        }\n      }\n    }], {\n      useNativeDriver: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: pageTheme.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Details\"), desc != 0 ? React.createElement(Text, {\n    style: pageTheme.regularText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, desc) : React.createElement(Text, {\n    style: pageTheme.regularText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"No description\")), React.createElement(View, {\n    style: pageTheme.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Bonus\"), count.map(function (item, index) {\n    return React.createElement(View, {\n      style: [pageTheme.fdWrapper, pageTheme.darkBGMedium, {\n        marginVertical: 5,\n        padding: 10\n      }],\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: pageTheme.regularText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"x\", item), React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        marginLeft: 15,\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, detail[index]));\n  })), React.createElement(View, {\n    style: pageTheme.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Units\"), React.createElement(View, {\n    style: pageTheme.flexWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, units.map(function (item, index) {\n    return React.createElement(View, {\n      style: [pageTheme.champAvatarWrapper, {\n        backgroundColor: getChampBorderColor(item, champions),\n        margin: 2.5\n      }],\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: pageTheme.avatarMed,\n      source: avatars[RefactorFileName(item)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }));\n  }))))));\n};\n\nexport default TraitPage;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  titleWrapper: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: \"hidden\",\n    paddingHorizontal: 10,\n    justifyContent: \"flex-end\"\n  },\n  traitTitle: {\n    fontSize: 30,\n    marginTop: 5,\n    fontFamily: \"RobotoBlack\",\n    color: \"#ffffffe6\",\n    textTransform: \"capitalize\",\n    letterSpacing: 2\n  },\n  section: {\n    marginVertical: 20\n  },\n  header: {\n    fontSize: 28,\n    fontFamily: \"RobotoBold\",\n    color: \"#E8ECEE\",\n    textTransform: \"capitalize\",\n    marginVertical: 10\n  },\n  bonusWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    backgroundColor: \"#1B475F\",\n    borderRadius: 4\n  },\n  traitDesc: {\n    fontSize: 20,\n    color: \"#B9C6CB\",\n    fontFamily: \"RobotoRegular\"\n  },\n  unitsWrapper: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  avatarWrapper: {\n    width: 56,\n    height: 56,\n    borderRadius: 4,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    marginRight: 10\n  },\n  avatar: {\n    width: 52,\n    height: 52\n  }\n});","map":{"version":3,"sources":["D:/Repos/TFTLAB/screens/Home/pages/traitpage.js"],"names":["React","classes","origins","avatars","getChampBorderColor","pageTheme","RefactorFileName","TraitPage","route","navigation","name","params","desc","count","detail","units","type","champions","scrollY","Animated","Value","headerHeight","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","flex","absoWrapper","height","padding","avatarBig","title","paddingBottom","transform","translateY","event","nativeEvent","contentOffset","y","section","header","regularText","map","item","index","fdWrapper","darkBGMedium","marginVertical","marginLeft","flexWrap","champAvatarWrapper","backgroundColor","margin","avatarMed","styles","StyleSheet","create","container","titleWrapper","position","top","left","right","overflow","paddingHorizontal","justifyContent","traitTitle","fontSize","marginTop","fontFamily","color","textTransform","letterSpacing","bonusWrapper","flexDirection","alignItems","paddingVertical","borderRadius","traitDesc","unitsWrapper","avatarWrapper","width","marginRight","avatar"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Animated,\r\n  Image,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport classes from \"../../../assets/classes/classes\";\r\nimport origins from \"../../../assets/origins/origins\";\r\nimport avatars from \"../../../assets/avatars/avatars\";\r\nimport getChampBorderColor from \"../../../helpers/getChampBorderColor\";\r\nimport { pageTheme } from \"../../../styles/page\";\r\nimport RefactorFileName from \"../../../helpers/refactorFileName\";\r\n\r\nconst TraitPage = ({ route, navigation }) => {\r\n  const { name } = route.params;\r\n  const { desc } = route.params;\r\n  const { count } = route.params;\r\n  const { detail } = route.params;\r\n  const { units } = route.params;\r\n  const { type } = route.params;\r\n  const { champions } = route.params;\r\n\r\n  const scrollY = new Animated.Value(0);\r\n  const headerHeight = scrollY.interpolate({\r\n    inputRange: [0, 300],\r\n    outputRange: [175, 35],\r\n    extrapolate: \"clamp\",\r\n    useNativeDriver: true,\r\n  });\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Animated.View\r\n        style={[pageTheme.absoWrapper, { height: headerHeight, padding: 10 }]}\r\n      >\r\n        <Image\r\n          style={pageTheme.avatarBig}\r\n          resizeMode=\"contain\"\r\n          source={\r\n            type == 0\r\n              ? classes[RefactorFileName(name, \"trait\")]\r\n              : origins[RefactorFileName(name, \"trait\")]\r\n          }\r\n        />\r\n\r\n        <Text style={pageTheme.title}>{name}</Text>\r\n      </Animated.View>\r\n      <Animated.View\r\n        style={{\r\n          flex: 1,\r\n          paddingBottom: headerHeight,\r\n          transform: [{ translateY: headerHeight }],\r\n        }}\r\n      >\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          scrollEventThrottle={1}\r\n          alwaysBounceVertical={false}\r\n          bounces={false}\r\n          style={{ padding: 10 }}\r\n          onScroll={Animated.event(\r\n            [{ nativeEvent: { contentOffset: { y: scrollY } } }],\r\n            { useNativeDriver: false }\r\n          )}\r\n        >\r\n          <View style={pageTheme.section}>\r\n            <Text style={pageTheme.header}>Details</Text>\r\n            {desc != 0 ? (\r\n              <Text style={pageTheme.regularText}>{desc}</Text>\r\n            ) : (\r\n              <Text style={pageTheme.regularText}>No description</Text>\r\n            )}\r\n          </View>\r\n          <View style={pageTheme.section}>\r\n            <Text style={pageTheme.header}>Bonus</Text>\r\n            {count.map((item, index) => (\r\n              <View\r\n                style={[\r\n                  pageTheme.fdWrapper,\r\n                  pageTheme.darkBGMedium,\r\n                  { marginVertical: 5, padding: 10 },\r\n                ]}\r\n                key={index}\r\n              >\r\n                <Text style={pageTheme.regularText}>x{item}</Text>\r\n                <Text\r\n                  style={[pageTheme.regularText, { marginLeft: 15, flex: 1 }]}\r\n                >\r\n                  {detail[index]}\r\n                </Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n          <View style={pageTheme.section}>\r\n            <Text style={pageTheme.header}>Units</Text>\r\n            <View style={pageTheme.flexWrap}>\r\n              {units.map((item, index) => (\r\n                <View\r\n                  style={[\r\n                    pageTheme.champAvatarWrapper,\r\n                    {\r\n                      backgroundColor: getChampBorderColor(item, champions),\r\n                      margin: 2.5,\r\n                    },\r\n                  ]}\r\n                  key={index}\r\n                >\r\n                  <Image\r\n                    style={pageTheme.avatarMed}\r\n                    source={avatars[RefactorFileName(item)]}\r\n                  />\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TraitPage;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  titleWrapper: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    overflow: \"hidden\",\r\n    paddingHorizontal: 10,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  traitTitle: {\r\n    fontSize: 30,\r\n    marginTop: 5,\r\n    fontFamily: \"RobotoBlack\",\r\n    color: \"#ffffffe6\",\r\n    textTransform: \"capitalize\",\r\n    letterSpacing: 2,\r\n  },\r\n  section: {\r\n    marginVertical: 20,\r\n  },\r\n  header: {\r\n    fontSize: 28,\r\n    fontFamily: \"RobotoBold\",\r\n    color: \"#E8ECEE\",\r\n    textTransform: \"capitalize\",\r\n    marginVertical: 10,\r\n  },\r\n  bonusWrapper: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    backgroundColor: \"#1B475F\",\r\n    borderRadius: 4,\r\n  },\r\n  traitDesc: {\r\n    fontSize: 20,\r\n    color: \"#B9C6CB\",\r\n    fontFamily: \"RobotoRegular\",\r\n  },\r\n  unitsWrapper: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  avatarWrapper: {\r\n    width: 56,\r\n    height: 56,\r\n    borderRadius: 4,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n    marginRight: 10,\r\n  },\r\n  avatar: {\r\n    width: 52,\r\n    height: 52,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
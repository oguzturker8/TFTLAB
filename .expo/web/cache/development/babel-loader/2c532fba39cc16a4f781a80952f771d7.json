{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\components\\\\origindetails.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport origins from \"../assets/origins/origins\";\nimport GetTextHeight from \"../helpers/getTextHeight\";\nimport GetBorderColor from \"../helpers/getBorderColor\";\nimport avatars from \"../assets/avatars/avatars\";\nexport default function OriginDetail(_ref) {\n  var origin = _ref.origin;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.titleWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: origins[origin.name],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, origin.name)), origin.desc != \"\" ? React.createElement(Text, {\n    style: styles.desc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, origin.desc) : null, React.createElement(View, {\n    style: styles.reciperWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, origin.detail.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [styles.col, {\n        height: GetTextHeight(origin.detail[index], Dimensions.get(\"window\").width)\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: [styles.num, {\n        backgroundColor: GetBorderColor(origin.name, origin.count[index])\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, origin.count[index]), React.createElement(Text, {\n      style: styles.detail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, origin.detail[index]));\n  })), React.createElement(View, {\n    style: styles.unitWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, origin.units.map(function (item, index) {\n    return React.createElement(Image, {\n      style: styles.unit,\n      source: avatars[item],\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    });\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  logo: {\n    width: 25,\n    height: 25\n  },\n  title: {\n    fontSize: 18,\n    fontFamily: \"RobotoBlack\",\n    color: \"#fff\",\n    textTransform: \"capitalize\",\n    marginLeft: 5,\n    letterSpacing: 1\n  },\n  desc: {\n    padding: 10,\n    fontSize: 12,\n    color: \"#fff\",\n    fontFamily: \"RobotoMedium\",\n    textAlign: \"center\"\n  },\n  col: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  detail: {\n    marginLeft: 5,\n    fontSize: 12,\n    color: \"#fff\",\n    fontFamily: \"RobotoRegular\"\n  },\n  num: {\n    fontSize: 10,\n    color: \"#fff\",\n    borderRadius: 50,\n    paddingVertical: 5,\n    paddingHorizontal: 8,\n    fontFamily: \"RobotoBlack\"\n  },\n  reciperWrapper: {\n    paddingVertical: 10,\n    paddingHorizontal: 50\n  },\n  unitWrapper: {\n    width: \"100%\",\n    height: \"auto\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  unit: {\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\n    margin: \"1%\"\n  }\n});","map":{"version":3,"sources":["D:/Repos/TFTLAB/components/origindetails.js"],"names":["React","origins","GetTextHeight","GetBorderColor","avatars","OriginDetail","origin","styles","container","titleWrapper","logo","name","title","desc","reciperWrapper","detail","map","item","index","col","height","Dimensions","get","width","num","backgroundColor","count","unitWrapper","units","unit","StyleSheet","create","justifyContent","alignItems","flexDirection","fontSize","fontFamily","color","textTransform","marginLeft","letterSpacing","padding","textAlign","borderRadius","paddingVertical","paddingHorizontal","flexWrap","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, Image, Dimensions } from \"react-native\";\r\nimport origins from \"../assets/origins/origins\";\r\nimport GetTextHeight from \"../helpers/getTextHeight\";\r\nimport GetBorderColor from \"../helpers/getBorderColor\";\r\nimport avatars from \"../assets/avatars/avatars\";\r\n\r\nexport default function OriginDetail({ origin }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.titleWrapper}>\r\n        <Image style={styles.logo} source={origins[origin.name]} />\r\n        <Text style={styles.title}>{origin.name}</Text>\r\n      </View>\r\n      {origin.desc != \"\" ? (\r\n        <Text style={styles.desc}>{origin.desc}</Text>\r\n      ) : null}\r\n      <View style={styles.reciperWrapper}>\r\n        {origin.detail.map((item, index) => (\r\n          <View\r\n            key={index}\r\n            style={[\r\n              styles.col,\r\n              {\r\n                height: GetTextHeight(\r\n                  origin.detail[index],\r\n                  Dimensions.get(\"window\").width\r\n                ),\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.num,\r\n                {\r\n                  backgroundColor: GetBorderColor(\r\n                    origin.name,\r\n                    origin.count[index]\r\n                  ),\r\n                },\r\n              ]}\r\n            >\r\n              {origin.count[index]}\r\n            </Text>\r\n            <Text style={styles.detail}>{origin.detail[index]}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.unitWrapper}>\r\n        {origin.units.map((item, index) => (\r\n          <Image style={styles.unit} source={avatars[item]} key={index} />\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  titleWrapper: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  logo: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontFamily: \"RobotoBlack\",\r\n    color: \"#fff\",\r\n    textTransform: \"capitalize\",\r\n    marginLeft: 5,\r\n    letterSpacing: 1,\r\n  },\r\n  desc: {\r\n    padding: 10,\r\n    fontSize: 12,\r\n    color: \"#fff\",\r\n    fontFamily: \"RobotoMedium\",\r\n    textAlign: \"center\",\r\n  },\r\n  col: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  detail: {\r\n    marginLeft: 5,\r\n    fontSize: 12,\r\n    color: \"#fff\",\r\n    fontFamily: \"RobotoRegular\",\r\n  },\r\n\r\n  num: {\r\n    fontSize: 10,\r\n    color: \"#fff\",\r\n    borderRadius: 50,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 8,\r\n    fontFamily: \"RobotoBlack\",\r\n  },\r\n  reciperWrapper: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 50,\r\n  },\r\n\r\n  unitWrapper: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  unit: {\r\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\r\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\r\n    margin: \"1%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
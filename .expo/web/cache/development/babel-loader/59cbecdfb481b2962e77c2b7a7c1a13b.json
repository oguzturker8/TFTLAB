{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\screens\\\\Home\\\\complist.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Comp from \"../../components/CompList/comps\";\nimport Loading from \"../../components/shared/loading\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { pageTheme } from \"../../styles/page\";\nimport { global } from \"../../styles/global\";\nexport default function CompList(_ref) {\n  var route = _ref.route;\n  var navigation = route.params.navigation;\n  var list = route.params.list;\n  var champions = route.params.champions;\n  return navigation != undefined && list != undefined && champions != undefined ? React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: global.statusBar.backgroundColor,\n    barStyle: \"dark-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: pageTheme.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, list != 0 && champions != 0 ? list.map(function (item, index) {\n    return React.createElement(Comp, {\n      list: item,\n      navigation: navigation,\n      champions: champions,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    });\n  }) : React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))) : null;\n}","map":{"version":3,"sources":["D:/Repos/TFTLAB/screens/Home/complist.js"],"names":["React","Comp","Loading","ScrollView","pageTheme","global","CompList","route","navigation","params","list","champions","undefined","statusBar","backgroundColor","page","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,SAAT;AACA,SAASC,MAAT;AAEA,eAAe,SAASC,QAAT,OAA6B;AAAA,MAATC,KAAS,QAATA,KAAS;AAAA,MAClCC,UADkC,GACnBD,KAAK,CAACE,MADa,CAClCD,UADkC;AAAA,MAElCE,IAFkC,GAEzBH,KAAK,CAACE,MAFmB,CAElCC,IAFkC;AAAA,MAGlCC,SAHkC,GAGpBJ,KAAK,CAACE,MAHc,CAGlCE,SAHkC;AAI1C,SAAOH,UAAU,IAAII,SAAd,IACLF,IAAI,IAAIE,SADH,IAELD,SAAS,IAAIC,SAFR,GAGL,oBAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAEP,MAAM,CAACQ,SAAP,CAAiBC,eADpC;AAEE,IAAA,QAAQ,EAAC,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,SAAS,CAACW,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,IAAI,CAAR,IAAaC,SAAS,IAAI,CAA1B,GACCD,IAAI,CAACM,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,WACP,oBAAC,IAAD;AACE,MAAA,IAAI,EAAED,IADR;AAEE,MAAA,UAAU,EAAET,UAFd;AAGE,MAAA,SAAS,EAAEG,SAHb;AAIE,MAAA,GAAG,EAAEO,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAT,CADD,GAUC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CALF,CAHK,GAuBH,IAvBJ;AAwBD","sourcesContent":["import React from \"react\";\r\nimport { View, StatusBar } from \"react-native\";\r\nimport Comp from \"../../components/CompList/comps\";\r\nimport Loading from \"../../components/shared/loading\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { pageTheme } from \"../../styles/page\";\r\nimport { global } from \"../../styles/global\";\r\n\r\nexport default function CompList({ route }) {\r\n  const { navigation } = route.params;\r\n  const { list } = route.params;\r\n  const { champions } = route.params;\r\n  return navigation != undefined &&\r\n    list != undefined &&\r\n    champions != undefined ? (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <StatusBar\r\n        backgroundColor={global.statusBar.backgroundColor}\r\n        barStyle=\"dark-content\"\r\n      />\r\n      <View style={pageTheme.page}>\r\n        {list != 0 && champions != 0 ? (\r\n          list.map((item, index) => (\r\n            <Comp\r\n              list={item}\r\n              navigation={navigation}\r\n              champions={champions}\r\n              key={index}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  ) : null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
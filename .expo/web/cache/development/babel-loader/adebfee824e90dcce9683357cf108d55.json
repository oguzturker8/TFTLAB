{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\screens\\\\Updater\\\\updater.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { pageTheme } from \"../../styles/page\";\nimport { global } from \"../../styles/global\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport HomeBottomRoute from \"../../routes/Home/homebottomroute\";\nimport { Easing } from \"react-native-reanimated\";\nimport Loader from \"../../components/Updater/loader\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar MyTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  dark: false,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: global.theme.backgroundColor\n  })\n});\n\nvar writeFile = function writeFile(key, value) {\n  var file;\n  return _regeneratorRuntime.async(function writeFile$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          file = JSON.stringify(value);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, file).then(function (name) {}));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nexport default function Updater() {\n  var _useState = useState({\n    champions: 0,\n    classes: 0,\n    origins: 0,\n    items: 0,\n    champList: 0,\n    classList: 0,\n    compList: 0,\n    itemList: 0,\n    originList: 0,\n    patchNotes: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      database = _useState2[0],\n      setDatabase = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDone = _useState4[0],\n      setIsDone = _useState4[1];\n\n  useEffect(function () {\n    fetch(\"https://tftlab.herokuapp.com/api/static/champions\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          champions: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/static/classes\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          classes: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/static/origins\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          origins: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/static/items\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          items: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/champlists\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          champList: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/classlists\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          classList: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/complists\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          compList: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/itemlists\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          itemList: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/originlists\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          originList: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/patchnotes\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setDatabase(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          patchNotes: resJson\n        });\n      });\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  }, []);\n  useEffect(function () {\n    database.compList != 0 && database.champions != 0 && database.champList != 0 && database.classes != 0 && database.classList != 0 && database.origins != 0 && database.originList != 0 && database.items != 0 && database.itemList != 0 && database.patchNotes != 0 ? writeFile(\"@database\", database) : null;\n  }, [database]);\n  var rotate = new Animated.Value(0);\n  var rotation = rotate.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"-35deg\", \"-10deg\"]\n  });\n\n  var animateLogo = function animateLogo() {\n    rotate.setValue(0);\n    Animated.timing(rotate, {\n      toValue: 1,\n      duration: 333,\n      delay: 0,\n      easing: Easing.linear,\n      useNativeDriver: true\n    }).start(function () {\n      Animated.timing(rotate, {\n        toValue: 0,\n        duration: 333,\n        delay: 0,\n        easing: Easing.linear,\n        useNativeDriver: true\n      }).start(function () {\n        return animateLogo();\n      });\n    });\n  };\n\n  {\n    database.compList != 0 && database.champions != 0 && database.champList != 0 && database.classes != 0 && database.classList != 0 && database.origins != 0 && database.originList != 0 && database.items != 0 && database.itemList != 0 && database.patchNotes != 0 ? animateLogo() : null;\n    return !isDone ? React.createElement(View, {\n      style: [pageTheme.page, global.theme, {\n        alignItems: \"center\",\n        justifyContent: \"flex-end\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 7\n      }\n    }, React.createElement(StatusBar, {\n      backgroundColor: global.statusBar.backgroundColor,\n      barStyle: \"dark-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: [pageTheme.fdCenter, {\n        marginBottom: Dimensions.get(\"window\").height * 0.2\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: pageTheme.logoTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, \"TFT\"), React.createElement(Animated.Image, {\n      style: [pageTheme.avatarBig, {\n        transform: [{\n          rotate: rotation\n        }]\n      }],\n      source: require(\"../../assets/logo.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    })), React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        marginVertical: 25\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }, \"Oh! It seems new patch comes out.\"), React.createElement(View, {\n      style: {\n        marginBottom: Dimensions.get(\"window\").height * 0.08,\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, database.compList != 0 && database.champions != 0 && database.champList != 0 && database.classes != 0 && database.classList != 0 && database.origins != 0 && database.originList != 0 && database.items != 0 && database.itemList != 0 && database.patchNotes != 0 ? React.createElement(Loader, {\n      setIsDone: setIsDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }) : null, React.createElement(Text, {\n      style: [pageTheme.textDetail, {\n        marginTop: 10\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }, \"updating new patch...\"))) : React.createElement(NavigationContainer, {\n      theme: MyTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }\n    }, React.createElement(HomeBottomRoute, {\n      database: database,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["D:/Repos/TFTLAB/screens/Updater/updater.js"],"names":["React","useState","useEffect","pageTheme","global","NavigationContainer","DefaultTheme","HomeBottomRoute","Easing","Loader","AsyncStorage","MyTheme","dark","colors","background","theme","backgroundColor","writeFile","key","value","file","JSON","stringify","setItem","then","name","console","log","Updater","champions","classes","origins","items","champList","classList","compList","itemList","originList","patchNotes","database","setDatabase","isDone","setIsDone","fetch","method","headers","res","json","resJson","prev","catch","error","rotate","Animated","Value","rotation","interpolate","inputRange","outputRange","animateLogo","setValue","timing","toValue","duration","delay","easing","linear","useNativeDriver","start","page","alignItems","justifyContent","statusBar","fdCenter","marginBottom","Dimensions","get","height","logoTitle","avatarBig","transform","require","regularText","marginVertical","textDetail","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, Animated, Dimensions, StatusBar } from \"react-native\";\r\nimport { pageTheme } from \"../../styles/page\";\r\nimport { global } from \"../../styles/global\";\r\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\r\nimport HomeBottomRoute from \"../../routes/Home/homebottomroute\";\r\nimport { Easing } from \"react-native-reanimated\";\r\nimport Loader from \"../../components/Updater/loader\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst MyTheme = {\r\n  ...DefaultTheme,\r\n  dark: false,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    background: global.theme.backgroundColor,\r\n  },\r\n};\r\n\r\nconst writeFile = async (key, value) => {\r\n  try {\r\n    const file = JSON.stringify(value);\r\n    await AsyncStorage.setItem(key, file).then((name) => {});\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport default function Updater() {\r\n  const [database, setDatabase] = useState({\r\n    //statics\r\n    champions: 0,\r\n    classes: 0,\r\n    origins: 0,\r\n    items: 0,\r\n    //dynamics\r\n    champList: 0,\r\n    classList: 0,\r\n    compList: 0,\r\n    itemList: 0,\r\n    originList: 0,\r\n    patchNotes: 0,\r\n  });\r\n\r\n  const [isDone, setIsDone] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //GET STATICS\r\n    fetch(\"https://tftlab.herokuapp.com/api/static/champions\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          champions: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/static/classes\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          classes: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/static/origins\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          origins: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/static/items\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          items: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n\r\n    //GET DYNAMICS\r\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/champlists\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          champList: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/classlists\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          classList: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/complists\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          compList: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/itemlists\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          itemList: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/originlists\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          originList: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n    //\r\n    fetch(\"https://tftlab.herokuapp.com/api/dynamic/patchnotes\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setDatabase((prev) => ({\r\n          ...prev,\r\n          patchNotes: resJson,\r\n        }));\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    database.compList != 0 &&\r\n    database.champions != 0 &&\r\n    database.champList != 0 &&\r\n    database.classes != 0 &&\r\n    database.classList != 0 &&\r\n    database.origins != 0 &&\r\n    database.originList != 0 &&\r\n    database.items != 0 &&\r\n    database.itemList != 0 &&\r\n    database.patchNotes != 0\r\n      ? writeFile(\"@database\", database)\r\n      : null;\r\n  }, [database]);\r\n\r\n  const rotate = new Animated.Value(0);\r\n  const rotation = rotate.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"-35deg\", \"-10deg\"],\r\n  });\r\n\r\n  const animateLogo = () => {\r\n    rotate.setValue(0);\r\n    Animated.timing(rotate, {\r\n      toValue: 1,\r\n      duration: 333,\r\n      delay: 0,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      Animated.timing(rotate, {\r\n        toValue: 0,\r\n        duration: 333,\r\n        delay: 0,\r\n        easing: Easing.linear,\r\n        useNativeDriver: true,\r\n      }).start(() => animateLogo());\r\n    });\r\n  };\r\n\r\n  {\r\n    database.compList != 0 &&\r\n    database.champions != 0 &&\r\n    database.champList != 0 &&\r\n    database.classes != 0 &&\r\n    database.classList != 0 &&\r\n    database.origins != 0 &&\r\n    database.originList != 0 &&\r\n    database.items != 0 &&\r\n    database.itemList != 0 &&\r\n    database.patchNotes != 0\r\n      ? animateLogo()\r\n      : null;\r\n\r\n    return !isDone ? (\r\n      <View\r\n        style={[\r\n          pageTheme.page,\r\n          global.theme,\r\n          { alignItems: \"center\", justifyContent: \"flex-end\" },\r\n        ]}\r\n      >\r\n        <StatusBar\r\n          backgroundColor={global.statusBar.backgroundColor}\r\n          barStyle=\"dark-content\"\r\n        />\r\n        <View\r\n          style={[\r\n            pageTheme.fdCenter,\r\n            { marginBottom: Dimensions.get(\"window\").height * 0.2 },\r\n          ]}\r\n        >\r\n          <Text style={pageTheme.logoTitle}>TFT</Text>\r\n          <Animated.Image\r\n            style={[\r\n              pageTheme.avatarBig,\r\n              {\r\n                transform: [{ rotate: rotation }],\r\n              },\r\n            ]}\r\n            source={require(\"../../assets/logo.png\")}\r\n          />\r\n        </View>\r\n        <Text style={[pageTheme.regularText, { marginVertical: 25 }]}>\r\n          Oh! It seems new patch comes out.\r\n        </Text>\r\n        <View\r\n          style={{\r\n            marginBottom: Dimensions.get(\"window\").height * 0.08,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {database.compList != 0 &&\r\n          database.champions != 0 &&\r\n          database.champList != 0 &&\r\n          database.classes != 0 &&\r\n          database.classList != 0 &&\r\n          database.origins != 0 &&\r\n          database.originList != 0 &&\r\n          database.items != 0 &&\r\n          database.itemList != 0 &&\r\n          database.patchNotes != 0 ? (\r\n            <Loader setIsDone={setIsDone} />\r\n          ) : null}\r\n          <Text style={[pageTheme.textDetail, { marginTop: 10 }]}>\r\n            updating new patch...\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    ) : (\r\n      <NavigationContainer theme={MyTheme}>\r\n        <HomeBottomRoute database={database} />\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\components\\\\CompList\\\\comps.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport avatars from \"../../assets/avatars/avatars\";\nimport classes from \"../../assets/classes/classes\";\nimport origins from \"../../assets/origins/origins\";\nimport getChampBorderColor from \"../../helpers/getChampBorderColor\";\nimport getRelatedElement from \"../../helpers/getRelatedElement\";\nimport { pageTheme } from \"../../styles/page\";\nimport RefactorFileName from \"../../helpers/refactorFileName\";\nimport getCompTraits from \"../../helpers/getCompTraits\";\n\nvar TeamComp = function TeamComp(_ref) {\n  var list = _ref.list,\n      navigation = _ref.navigation,\n      champions = _ref.champions;\n  return React.createElement(View, {\n    style: pageTheme.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, list.tier, \" tier\"), React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, list.comps.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: {\n        marginRight: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: [pageTheme.darkBGMedium, {\n        width: 252\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: pageTheme.flexWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, item.champs.map(function (item, index) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          var champ = getRelatedElement(item, champions);\n          navigation.navigate(\"ChampPage\", {\n            name: champ[0].name,\n            item: champ[0].items,\n            origin: champ[0].origin,\n            type: champ[0].class,\n            skill: champ[0].skill,\n            stats: champ[0].stats\n          });\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: [pageTheme.darkBGSmall, {\n          backgroundColor: getChampBorderColor(RefactorFileName(item)),\n          margin: 2.5\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: pageTheme.avatarMed,\n        source: avatars[RefactorFileName(item)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      })));\n    }))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"CompPage\", {\n          name: item.name,\n          champions: item.champs\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: [pageTheme.flexWrap, {\n        width: 252\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, getCompTraits(item.champs).traits.map(function (item2, index) {\n      return getCompTraits(item.champs).details[index] != 0 ? React.createElement(View, {\n        key: index,\n        style: [pageTheme.darkBGSmall, pageTheme.fdWrapperAIC, {\n          paddingHorizontal: 3,\n          marginRight: 2.5,\n          marginTop: 2.5\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: (pageTheme.textDetail, {\n          color: getCompTraits(item.champs).colors[index],\n          marginHorizontal: 1\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }\n      }, \"x\", getCompTraits(item.champs).counts[index]), React.createElement(Image, {\n        style: pageTheme.avatarVerySmall,\n        source: classes[item2] != undefined ? classes[item2] : origins[item2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      })) : null;\n    })), React.createElement(View, {\n      style: [pageTheme.fdWrapperAIC, {\n        justifyContent: \"space-between\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: pageTheme.regularText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, item.name), React.createElement(Octicons, {\n      name: \"arrow-small-right\",\n      size: 28,\n      color: \"#B9C6CB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }))));\n  })));\n};\n\nexport default TeamComp;","map":{"version":3,"sources":["D:/Repos/TFTLAB/components/CompList/comps.js"],"names":["React","ScrollView","TouchableOpacity","Octicons","avatars","classes","origins","getChampBorderColor","getRelatedElement","pageTheme","RefactorFileName","getCompTraits","TeamComp","list","navigation","champions","page","title","tier","comps","map","item","index","marginRight","darkBGMedium","width","flexWrap","champs","champ","navigate","name","items","origin","type","class","skill","stats","darkBGSmall","backgroundColor","margin","avatarMed","traits","item2","details","fdWrapperAIC","paddingHorizontal","marginTop","textDetail","color","colors","marginHorizontal","counts","avatarVerySmall","undefined","justifyContent","regularText"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text, View, Image } from \"react-native\";\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { Octicons } from \"@expo/vector-icons\";\r\nimport avatars from \"../../assets/avatars/avatars\";\r\nimport classes from \"../../assets/classes/classes\";\r\nimport origins from \"../../assets/origins/origins\";\r\nimport getChampBorderColor from \"../../helpers/getChampBorderColor\";\r\nimport getRelatedElement from \"../../helpers/getRelatedElement\";\r\nimport { pageTheme } from \"../../styles/page\";\r\nimport RefactorFileName from \"../../helpers/refactorFileName\";\r\nimport getCompTraits from \"../../helpers/getCompTraits\";\r\n\r\nconst TeamComp = ({ list, navigation, champions }) => {\r\n  return (\r\n    <View style={pageTheme.page}>\r\n      <Text style={pageTheme.title}>{list.tier} tier</Text>\r\n      <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        {list.comps.map((item, index) => (\r\n          <View key={index} style={{ marginRight: 25 }}>\r\n            <View style={[pageTheme.darkBGMedium, { width: 252 }]}>\r\n              <View style={pageTheme.flexWrap}>\r\n                {item.champs.map((item, index) => (\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      let champ = getRelatedElement(item, champions);\r\n                      navigation.navigate(\"ChampPage\", {\r\n                        name: champ[0].name,\r\n                        item: champ[0].items,\r\n                        origin: champ[0].origin,\r\n                        type: champ[0].class,\r\n                        skill: champ[0].skill,\r\n                        stats: champ[0].stats,\r\n                      });\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <View\r\n                      style={[\r\n                        pageTheme.darkBGSmall,\r\n                        {\r\n                          backgroundColor: getChampBorderColor(\r\n                            RefactorFileName(item)\r\n                          ),\r\n                          margin: 2.5,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Image\r\n                        style={pageTheme.avatarMed}\r\n                        source={avatars[RefactorFileName(item)]}\r\n                      />\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </View>\r\n            </View>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                navigation.navigate(\"CompPage\", {\r\n                  name: item.name,\r\n                  champions: item.champs,\r\n                });\r\n              }}\r\n            >\r\n              <View style={[pageTheme.flexWrap, { width: 252 }]}>\r\n                {getCompTraits(item.champs).traits.map((item2, index) =>\r\n                  getCompTraits(item.champs).details[index] != 0 ? (\r\n                    <View\r\n                      key={index}\r\n                      style={[\r\n                        pageTheme.darkBGSmall,\r\n                        pageTheme.fdWrapperAIC,\r\n                        {\r\n                          paddingHorizontal: 3,\r\n                          marginRight: 2.5,\r\n                          marginTop: 2.5,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Text\r\n                        style={\r\n                          (pageTheme.textDetail,\r\n                          {\r\n                            color: getCompTraits(item.champs).colors[index],\r\n                            marginHorizontal: 1,\r\n                          })\r\n                        }\r\n                      >\r\n                        x{getCompTraits(item.champs).counts[index]}\r\n                      </Text>\r\n                      <Image\r\n                        style={pageTheme.avatarVerySmall}\r\n                        source={\r\n                          classes[item2] != undefined\r\n                            ? classes[item2]\r\n                            : origins[item2]\r\n                        }\r\n                      />\r\n                    </View>\r\n                  ) : null\r\n                )}\r\n              </View>\r\n              <View\r\n                style={[\r\n                  pageTheme.fdWrapperAIC,\r\n                  {\r\n                    justifyContent: \"space-between\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Text style={pageTheme.regularText}>{item.name}</Text>\r\n                <Octicons name=\"arrow-small-right\" size={28} color=\"#B9C6CB\" />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TeamComp;\r\n"]},"metadata":{},"sourceType":"module"}
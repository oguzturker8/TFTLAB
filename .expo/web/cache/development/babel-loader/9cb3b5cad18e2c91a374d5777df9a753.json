{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\components\\\\compTrait.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport classes from \"../assets/classes/classes\";\nimport origins from \"../assets/origins/origins\";\nimport Tooltip from \"react-native-walkthrough-tooltip\";\nimport checkIsClass from \"../helpers/checkIsClass\";\nimport getBorderColor from \"../helpers/getBorderColor\";\nimport TraitDetails from \"./traitdetails\";\nexport default function CompTrait(_ref) {\n  var trait = _ref.trait,\n      count = _ref.count,\n      desc = _ref.desc,\n      combo = _ref.combo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  return React.createElement(Tooltip, {\n    isVisible: isVisible,\n    content: React.createElement(TraitDetails, {\n      name: trait,\n      count: count,\n      desc: desc,\n      combo: combo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }),\n    placement: \"center\",\n    onClose: function onClose() {\n      return setIsVisible(false);\n    },\n    contentStyle: styles.tooltip,\n    showChildInTooltip: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return setIsVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: getBorderColor(trait, count)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: checkIsClass(trait) ? classes[trait] : origins[trait],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.trait,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, count))));\n}\nvar styles = StyleSheet.create({\n  tooltip: {\n    width: Dimensions.get(\"window\").width * 0.65,\n    height: \"auto\",\n    backgroundColor: \"#34495e\"\n  },\n  container: {\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    borderRadius: 4,\n    padding: 5\n  },\n  trait: {\n    fontSize: 10,\n    color: \"#fff\",\n    textShadowColor: \"rgba(0, 0, 0, 0.25)\",\n    textShadowOffset: {\n      width: -0.5,\n      height: 0\n    },\n    textShadowRadius: 5,\n    fontFamily: \"RobotoBold\",\n    marginLeft: \"10%\"\n  },\n  logo: {\n    width: 10,\n    height: 10\n  }\n});","map":{"version":3,"sources":["D:/Repos/TFTLAB/components/compTrait.js"],"names":["React","useState","classes","origins","Tooltip","checkIsClass","getBorderColor","TraitDetails","CompTrait","trait","count","desc","combo","isVisible","setIsVisible","styles","tooltip","container","backgroundColor","logo","StyleSheet","create","width","Dimensions","get","height","flexDirection","alignItems","justifyContent","marginTop","marginLeft","borderRadius","padding","fontSize","color","textShadowColor","textShadowOffset","textShadowRadius","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Dimensions,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport classes from \"../assets/classes/classes\";\r\nimport origins from \"../assets/origins/origins\";\r\nimport Tooltip from \"react-native-walkthrough-tooltip\";\r\nimport checkIsClass from \"../helpers/checkIsClass\";\r\nimport getBorderColor from \"../helpers/getBorderColor\";\r\nimport TraitDetails from \"./traitdetails\";\r\n\r\nexport default function CompTrait({ trait, count, desc, combo }) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  return (\r\n    <Tooltip\r\n      isVisible={isVisible}\r\n      content={\r\n        <TraitDetails name={trait} count={count} desc={desc} combo={combo} />\r\n      }\r\n      placement=\"center\"\r\n      onClose={() => setIsVisible(false)}\r\n      contentStyle={styles.tooltip}\r\n      showChildInTooltip={false}\r\n    >\r\n      <TouchableHighlight onPress={() => setIsVisible(true)}>\r\n        <View\r\n          style={[\r\n            styles.container,\r\n            { backgroundColor: getBorderColor(trait, count) },\r\n          ]}\r\n        >\r\n          <Image\r\n            style={styles.logo}\r\n            source={checkIsClass(trait) ? classes[trait] : origins[trait]}\r\n          />\r\n          <Text style={styles.trait}>{count}</Text>\r\n        </View>\r\n      </TouchableHighlight>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tooltip: {\r\n    width: Dimensions.get(\"window\").width * 0.65,\r\n    height: \"auto\",\r\n    backgroundColor: \"#34495e\",\r\n  },\r\n  container: {\r\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 8,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    borderRadius: 4,\r\n    padding: 5,\r\n  },\r\n  trait: {\r\n    fontSize: 10,\r\n    color: \"#fff\",\r\n    textShadowColor: \"rgba(0, 0, 0, 0.25)\",\r\n    textShadowOffset: { width: -0.5, height: 0 },\r\n    textShadowRadius: 5,\r\n    fontFamily: \"RobotoBold\",\r\n    marginLeft: \"10%\",\r\n  },\r\n  logo: {\r\n    width: 10,\r\n    height: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\components\\\\Updater\\\\loader.js\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-reanimated\";\nimport { pageTheme } from \"../../styles/page\";\nexport default function Loader(_ref) {\n  var setIsDone = _ref.setIsDone;\n  var width = new Animated.Value(0);\n\n  var animateLoading = function animateLoading() {\n    Animated.timing(width, {\n      toValue: Dimensions.get(\"window\").width * 0.7,\n      duration: 2222,\n      delay: 150,\n      useNativeDriver: false,\n      easing: Easing.linear\n    }).start(function () {\n      return setIsDone(true);\n    });\n  };\n\n  useEffect(function () {\n    animateLoading();\n  }, []);\n  return React.createElement(Animated.View, {\n    style: {\n      width: width,\n      height: 5,\n      backgroundColor: pageTheme.pointer.color,\n      borderRadius: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/Repos/TFTLAB/components/Updater/loader.js"],"names":["React","useEffect","Animated","pageTheme","Loader","setIsDone","width","Value","animateLoading","timing","toValue","Dimensions","get","duration","delay","useNativeDriver","easing","Easing","linear","start","height","backgroundColor","pointer","color","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,SAAT;AAEA,eAAe,SAASC,MAAT,OAA+B;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAC5C,MAAMC,KAAK,GAAG,IAAIJ,QAAQ,CAACK,KAAb,CAAmB,CAAnB,CAAd;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BN,IAAAA,QAAQ,CAACO,MAAT,CAAgBH,KAAhB,EAAuB;AACrBI,MAAAA,OAAO,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBN,KAAzB,GAAiC,GADrB;AAErBO,MAAAA,QAAQ,EAAE,IAFW;AAGrBC,MAAAA,KAAK,EAAE,GAHc;AAIrBC,MAAAA,eAAe,EAAE,KAJI;AAKrBC,MAAAA,MAAM,EAAEC,MAAM,CAACC;AALM,KAAvB,EAMGC,KANH,CAMS;AAAA,aAAMd,SAAS,CAAC,IAAD,CAAf;AAAA,KANT;AAOD,GARD;;AAUAJ,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAEA,KADF;AAELc,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,eAAe,EAAElB,SAAS,CAACmB,OAAV,CAAkBC,KAH9B;AAILC,MAAAA,YAAY,EAAE;AAJT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Text, Easing, Dimensions } from \"react-native\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport { pageTheme } from \"../../styles/page\";\r\n\r\nexport default function Loader({ setIsDone }) {\r\n  const width = new Animated.Value(0);\r\n  const animateLoading = () => {\r\n    Animated.timing(width, {\r\n      toValue: Dimensions.get(\"window\").width * 0.7,\r\n      duration: 2222,\r\n      delay: 150,\r\n      useNativeDriver: false,\r\n      easing: Easing.linear,\r\n    }).start(() => setIsDone(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    animateLoading();\r\n  }, []);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        width: width,\r\n        height: 5,\r\n        backgroundColor: pageTheme.pointer.color,\r\n        borderRadius: 40,\r\n      }}\r\n    ></Animated.View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
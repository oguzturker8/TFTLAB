{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\screens\\\\home.js\";\nimport React, { useRef, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { StatusBar } from \"expo-status-bar\";\nimport TeamComps from \"./teamcomps\";\nimport ChampTier from \"./champtier\";\nimport ItemTier from \"./itemtier\";\nimport ClassTier from \"./classtier\";\nimport OriginTier from \"./origintier\";\nexport default function Welcome() {\n  var refScrollView = useRef(null);\n  var refBorder = useRef(null);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.titleWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"TFTLAB\")), React.createElement(View, {\n    style: styles.navbarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.navbarTitle,\n    onPress: function onPress() {\n      var _refScrollView$curren;\n\n      (_refScrollView$curren = refScrollView.current) == null ? void 0 : _refScrollView$curren.scrollTo({\n        x: 0,\n        animated: true\n      });\n      refBorder.current.setNativeProps({\n        style: {\n          left: 0\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"comps\"), React.createElement(Text, {\n    style: styles.navbarTitle,\n    onPress: function onPress() {\n      var _refScrollView$curren2;\n\n      (_refScrollView$curren2 = refScrollView.current) == null ? void 0 : _refScrollView$curren2.scrollTo({\n        x: Dimensions.get(\"window\").width,\n        animated: true\n      });\n      refBorder.current.setNativeProps({\n        style: {\n          left: Dimensions.get(\"window\").width * 0.18\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"champs\"), React.createElement(Text, {\n    style: styles.navbarTitle,\n    onPress: function onPress() {\n      var _refScrollView$curren3;\n\n      (_refScrollView$curren3 = refScrollView.current) == null ? void 0 : _refScrollView$curren3.scrollTo({\n        x: Dimensions.get(\"window\").width * 2,\n        animated: true\n      });\n      refBorder.current.setNativeProps({\n        style: {\n          left: Dimensions.get(\"window\").width * 0.36\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"items\"), React.createElement(Text, {\n    style: styles.navbarTitle,\n    onPress: function onPress() {\n      var _refScrollView$curren4;\n\n      (_refScrollView$curren4 = refScrollView.current) == null ? void 0 : _refScrollView$curren4.scrollTo({\n        x: Dimensions.get(\"window\").width * 3,\n        animated: true\n      });\n      refBorder.current.setNativeProps({\n        style: {\n          left: Dimensions.get(\"window\").width * 0.54\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"classes\"), React.createElement(Text, {\n    style: styles.navbarTitle,\n    onPress: function onPress() {\n      var _refScrollView$curren5;\n\n      (_refScrollView$curren5 = refScrollView.current) == null ? void 0 : _refScrollView$curren5.scrollTo({\n        x: Dimensions.get(\"window\").width * 4,\n        animated: true\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"origins\"), React.createElement(View, {\n    style: styles.border,\n    ref: refBorder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    style: {\n      flex: 1\n    },\n    pagingEnabled: true,\n    ref: refScrollView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(TeamComps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(ChampTier, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(ItemTier, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), React.createElement(ClassTier, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(OriginTier, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 25,\n    backgroundColor: \"#102531\"\n  },\n  titleWrapper: {\n    paddingVertical: 20,\n    height: 40,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 32,\n    height: 32\n  },\n  title: {\n    fontSize: 24,\n    fontFamily: \"RobotoBlack\",\n    color: \"#fff\",\n    textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n    textShadowOffset: {\n      width: -0.75,\n      height: 0\n    },\n    textShadowRadius: 5,\n    letterSpacing: 3\n  },\n  navbarWrapper: {\n    flexDirection: \"row\",\n    width: \"90%\",\n    height: 25,\n    backgroundColor: \"#123040\",\n    elevation: 5,\n    position: \"relative\"\n  },\n  navbarTitle: {\n    fontSize: 14,\n    fontFamily: \"RobotoBold\",\n    width: Dimensions.get(\"window\").width * 0.9 / 5,\n    height: 25,\n    textAlign: \"center\",\n    textAlignVertical: \"center\",\n    color: \"#fff\"\n  },\n  border: {\n    width: Dimensions.get(\"window\").width * 0.9 / 5,\n    height: 2,\n    backgroundColor: \"#fff\",\n    elevation: 6,\n    left: 0,\n    top: 23,\n    position: \"absolute\"\n  },\n  pageTitle: {\n    fontSize: 24,\n    fontFamily: \"RobotoBold\",\n    color: \"#fff\"\n  },\n  page: {\n    width: Dimensions.get(\"window\").width * 0.9,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    margin: Dimensions.get(\"window\").width * 0.03\n  },\n  cardWrapper: {\n    width: Dimensions.get(\"window\").width * 0.7,\n    height: Dimensions.get(\"window\").height * 0.15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  }\n});","map":{"version":3,"sources":["D:/Repos/TFTLAB/screens/home.js"],"names":["React","useRef","useState","StatusBar","TeamComps","ChampTier","ItemTier","ClassTier","OriginTier","Welcome","refScrollView","refBorder","styles","container","titleWrapper","logo","require","title","navbarWrapper","navbarTitle","current","scrollTo","x","animated","setNativeProps","style","left","Dimensions","get","width","border","flex","StyleSheet","create","alignItems","justifyContent","paddingTop","backgroundColor","paddingVertical","height","flexDirection","fontSize","fontFamily","color","textShadowColor","textShadowOffset","textShadowRadius","letterSpacing","elevation","position","textAlign","textAlignVertical","top","pageTitle","page","borderRadius","margin","cardWrapper"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  Image,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport TeamComps from \"./teamcomps\";\r\nimport ChampTier from \"./champtier\";\r\nimport ItemTier from \"./itemtier\";\r\nimport ClassTier from \"./classtier\";\r\nimport OriginTier from \"./origintier\";\r\n\r\nexport default function Welcome() {\r\n  const refScrollView = useRef(null);\r\n  const refBorder = useRef(null);\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"light\" />\r\n      <View style={styles.titleWrapper}>\r\n        <Image style={styles.logo} source={require(\"../assets/logo.png\")} />\r\n        <Text style={styles.title}>TFTLAB</Text>\r\n      </View>\r\n      <View style={styles.navbarWrapper}>\r\n        <Text\r\n          style={styles.navbarTitle}\r\n          onPress={() => {\r\n            refScrollView.current?.scrollTo({\r\n              x: 0,\r\n              animated: true,\r\n            });\r\n            refBorder.current.setNativeProps({\r\n              style: {\r\n                left: 0,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          comps\r\n        </Text>\r\n\r\n        <Text\r\n          style={styles.navbarTitle}\r\n          onPress={() => {\r\n            refScrollView.current?.scrollTo({\r\n              x: Dimensions.get(\"window\").width,\r\n              animated: true,\r\n            });\r\n            refBorder.current.setNativeProps({\r\n              style: {\r\n                left: Dimensions.get(\"window\").width * 0.18,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          champs\r\n        </Text>\r\n        <Text\r\n          style={styles.navbarTitle}\r\n          onPress={() => {\r\n            refScrollView.current?.scrollTo({\r\n              x: Dimensions.get(\"window\").width * 2,\r\n              animated: true,\r\n            });\r\n            refBorder.current.setNativeProps({\r\n              style: {\r\n                left: Dimensions.get(\"window\").width * 0.36,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          items\r\n        </Text>\r\n        <Text\r\n          style={styles.navbarTitle}\r\n          onPress={() => {\r\n            refScrollView.current?.scrollTo({\r\n              x: Dimensions.get(\"window\").width * 3,\r\n              animated: true,\r\n            });\r\n            refBorder.current.setNativeProps({\r\n              style: {\r\n                left: Dimensions.get(\"window\").width * 0.54,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          classes\r\n        </Text>\r\n        <Text\r\n          style={styles.navbarTitle}\r\n          onPress={() => {\r\n            refScrollView.current?.scrollTo({\r\n              x: Dimensions.get(\"window\").width * 4,\r\n              animated: true,\r\n            });\r\n          }}\r\n        >\r\n          origins\r\n        </Text>\r\n        <View style={styles.border} ref={refBorder}></View>\r\n      </View>\r\n\r\n      <ScrollView\r\n        horizontal={true}\r\n        showsHorizontalScrollIndicator={false}\r\n        style={{ flex: 1 }}\r\n        pagingEnabled={true}\r\n        ref={refScrollView}\r\n      >\r\n        <TeamComps />\r\n        <ChampTier />\r\n        <ItemTier />\r\n        <ClassTier />\r\n        <OriginTier />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingTop: 25,\r\n    backgroundColor: \"#102531\",\r\n  },\r\n  titleWrapper: {\r\n    paddingVertical: 20,\r\n    height: 40,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    width: 32,\r\n    height: 32,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontFamily: \"RobotoBlack\",\r\n    color: \"#fff\",\r\n    textShadowColor: \"rgba(0, 0, 0, 0.75)\",\r\n    textShadowOffset: { width: -0.75, height: 0 },\r\n    textShadowRadius: 5,\r\n    letterSpacing: 3,\r\n  },\r\n  navbarWrapper: {\r\n    flexDirection: \"row\",\r\n    width: \"90%\",\r\n    height: 25,\r\n    backgroundColor: \"#123040\",\r\n    elevation: 5,\r\n    position: \"relative\",\r\n  },\r\n  navbarTitle: {\r\n    fontSize: 14,\r\n    fontFamily: \"RobotoBold\",\r\n    width: (Dimensions.get(\"window\").width * 0.9) / 5,\r\n    height: 25,\r\n    textAlign: \"center\",\r\n    textAlignVertical: \"center\",\r\n    color: \"#fff\",\r\n  },\r\n  border: {\r\n    width: (Dimensions.get(\"window\").width * 0.9) / 5,\r\n    height: 2,\r\n    backgroundColor: \"#fff\",\r\n    elevation: 6,\r\n    left: 0,\r\n    top: 23,\r\n    position: \"absolute\",\r\n  },\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    fontFamily: \"RobotoBold\",\r\n    color: \"#fff\",\r\n  },\r\n  page: {\r\n    width: Dimensions.get(\"window\").width * 0.9,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 8,\r\n    margin: Dimensions.get(\"window\").width * 0.03,\r\n  },\r\n  cardWrapper: {\r\n    width: Dimensions.get(\"window\").width * 0.7,\r\n    height: Dimensions.get(\"window\").height * 0.15,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
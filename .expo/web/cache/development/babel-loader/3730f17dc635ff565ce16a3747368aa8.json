{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\screens\\\\Builder\\\\compbuilder.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Loading from \"../../components/shared/loading\";\nimport avatars from \"../../assets/avatars/avatars\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport getChampBorderColor from \"../../helpers/getChampBorderColor\";\nimport getCompTraits from \"../../helpers/getCompTraits\";\nimport origins from \"../../assets/origins/origins\";\nimport classes from \"../../assets/classes/classes\";\nimport { pageTheme } from \"../../styles/page\";\nimport { Easing } from \"react-native-reanimated\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RefactorFileName from \"../../helpers/refactorFileName\";\n\nvar CompBuilder = function CompBuilder(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comp = _useState2[0],\n      setComp = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      traits = _useState4[0],\n      setTraits = _useState4[1];\n\n  var champions = route.params.champions;\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isShrunk = _useState6[0],\n      setIsShrunk = _useState6[1];\n\n  var topScrollRef = useRef(null);\n  useEffect(function () {\n    setTraits(getCompTraits(comp));\n  }, [comp]);\n\n  var deneme = function deneme(item) {\n    setComp([].concat(_toConsumableArray(comp), [item]));\n  };\n\n  var topHeight = new Animated.Value(Dimensions.get(\"window\").height - 170);\n  var compComponent = [];\n\n  var _loop = function _loop(i) {\n    compComponent.push(React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        comp.length > 0 && comp[i] != undefined ? [setComp(comp.filter(function (item) {\n          return item != comp[i];\n        })), setTraits(getCompTraits(comp))] : null;\n      },\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [pageTheme.builderChild, {\n        backgroundColor: comp[i] != undefined ? getChampBorderColor(comp[i]) : \"#1B475F\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: comp[i] != undefined ? pageTheme.builderChildAvatar : {\n        width: 18,\n        height: 18\n      },\n      source: comp[i] != undefined ? avatars[RefactorFileName(comp[i])] : require(\"../../assets/builder/plus.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }))));\n  };\n\n  for (var i = 0; i < 10; i++) {\n    _loop(i);\n  }\n\n  return champions != 0 ? React.createElement(View, {\n    style: pageTheme.centeredFlex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      height: topHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    ref: topScrollRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: pageTheme.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Team Comp Builder\"), React.createElement(View, {\n    style: [pageTheme.flexWrap, pageTheme.centeredFlex],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, compComponent), comp.length >= 1 ? React.createElement(View, {\n    style: [pageTheme.centeredFlex, pageTheme.fdWrapperAIC, {\n      marginTop: 10\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.textBig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, comp.length, \"/10\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setComp([]);\n      setTraits(0);\n    },\n    style: [pageTheme.darkBGSmall, {\n      paddingHorizontal: 5,\n      marginLeft: 10\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.textMed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, \"reset\"))) : null, React.createElement(View, {\n    style: pageTheme.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Bonus\"), traits.traits != undefined ? traits.traits.map(function (item, index) {\n    return traits.details[index] != 0 ? React.createElement(View, {\n      key: index,\n      style: [pageTheme.fdWrapper, {\n        marginVertical: 10\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        width: 80,\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      numberOfLines: 1,\n      style: [pageTheme.textDetail, {\n        marginTop: 0,\n        textTransform: \"capitalize\",\n        color: pageTheme.regularText.color\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, traits.traits[index]), React.createElement(Image, {\n      style: pageTheme.avatarMed,\n      source: origins[RefactorFileName(item, \"trait\")] != undefined ? origins[RefactorFileName(item, \"trait\")] : classes[RefactorFileName(item, \"trait\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: [pageTheme.fdWrapperAIC, {\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        color: traits.colors[index],\n        marginTop: 0,\n        fontFamily: \"RobotoBold\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, traits.counts[index]), React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        marginTop: 0,\n        marginHorizontal: 10,\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, traits.details[index]))) : null;\n  }) : React.createElement(Text, {\n    style: pageTheme.regularText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"No bonus earned yet.\")), React.createElement(View, {\n    style: pageTheme.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: pageTheme.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"All Traits\"), traits.traits != undefined ? traits.traits.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [pageTheme.fdWrapper, {\n        marginVertical: 10\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: \"flex-start\",\n        width: 80\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      numberOfLines: 1,\n      style: [pageTheme.textDetail, {\n        marginTop: 0,\n        textTransform: \"capitalize\",\n        color: pageTheme.regularText.color\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 23\n      }\n    }, item), React.createElement(Image, {\n      style: pageTheme.avatarMed,\n      source: origins[RefactorFileName(item, \"trait\")] != undefined ? origins[RefactorFileName(item, \"trait\")] : classes[RefactorFileName(item, \"trait\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    })), React.createElement(View, {\n      style: [pageTheme.fdWrapperAIC, {\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        color: traits.colors[index],\n        marginTop: 0,\n        fontFamily: \"RobotoBold\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    }, traits.counts[index]), React.createElement(Text, {\n      style: [pageTheme.regularText, {\n        marginTop: 0,\n        marginHorizontal: 10,\n        flex: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    }, traits.details[index] != 0 ? traits.details[index] : \"No bonus earned yet.\")));\n  }) : React.createElement(Text, {\n    style: pageTheme.regularText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, \"Select champion to build a team comp.\"))))), React.createElement(View, {\n    style: {\n      flex: 1,\n      elevation: 5,\n      position: \"relative\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    scrollEventThrottle: 16,\n    alwaysBounceVertical: false,\n    bounces: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var _topScrollRef$current;\n\n      (_topScrollRef$current = topScrollRef.current) == null ? void 0 : _topScrollRef$current.scrollTo({\n        x: 0,\n        y: isShrunk ? 25 : 0\n      });\n      Animated.timing(topHeight, {\n        toValue: isShrunk ? 200 : Dimensions.get(\"window\").height - 170,\n        duration: 666,\n        easing: Easing.linear,\n        delay: 0,\n        useNativeDriver: false\n      }).start(function () {\n        setIsShrunk(!isShrunk);\n      });\n    },\n    style: {\n      alignSelf: \"center\",\n      marginBottom: 0,\n      elevation: 1,\n      zIndex: 1,\n      backgroundColor: \"transparent\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialIcons, {\n    name: !isShrunk ? \"expand-more\" : \"expand-less\",\n    size: 32,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: [pageTheme.flexWrap, pageTheme.centeredFlex, {\n      backgroundColor: pageTheme.darkBGMedium.backgroundColor,\n      borderTopLeftRadius: 18,\n      borderTopRightRadius: 18,\n      paddingVertical: 10,\n      width: Dimensions.get(\"window\").width * 0.95,\n      elevation: -1,\n      zIndex: -1,\n      paddingTop: 5\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, champions.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        comp.length < 10 && !comp.includes(item.name) ? deneme(item.name) : null;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: [pageTheme.darkBGSmall, {\n        backgroundColor: !comp.includes(item.name) ? getChampBorderColor(item.name) : \"#123040\",\n        margin: 2.5\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, React.createElement(ImageBackground, {\n      style: pageTheme.avatarMed,\n      source: avatars[RefactorFileName(item.name)],\n      imageStyle: {\n        opacity: comp.includes(item.name) ? 0.5 : 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 19\n      }\n    })));\n  }))))) : React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default CompBuilder;","map":{"version":3,"sources":["D:/Repos/TFTLAB/screens/Builder/compbuilder.js"],"names":["React","useState","useEffect","useRef","Loading","avatars","ScrollView","TouchableOpacity","getChampBorderColor","getCompTraits","origins","classes","pageTheme","Easing","MaterialIcons","RefactorFileName","CompBuilder","route","navigation","comp","setComp","traits","setTraits","champions","params","isShrunk","setIsShrunk","topScrollRef","deneme","item","topHeight","Animated","Value","Dimensions","get","height","compComponent","i","push","length","undefined","filter","builderChild","backgroundColor","builderChildAvatar","width","require","centeredFlex","page","title","flexWrap","fdWrapperAIC","marginTop","textBig","darkBGSmall","paddingHorizontal","marginLeft","textMed","section","header","map","index","details","fdWrapper","marginVertical","alignItems","textDetail","textTransform","color","regularText","avatarMed","flex","colors","fontFamily","counts","marginHorizontal","elevation","position","current","scrollTo","x","y","timing","toValue","duration","easing","linear","delay","useNativeDriver","start","alignSelf","marginBottom","zIndex","darkBGMedium","borderTopLeftRadius","borderTopRightRadius","paddingVertical","paddingTop","includes","name","margin","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  Dimensions,\r\n  Animated,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport Loading from \"../../components/shared/loading\";\r\nimport avatars from \"../../assets/avatars/avatars\";\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport getChampBorderColor from \"../../helpers/getChampBorderColor\";\r\nimport getCompTraits from \"../../helpers/getCompTraits\";\r\nimport origins from \"../../assets/origins/origins\";\r\nimport classes from \"../../assets/classes/classes\";\r\nimport { pageTheme } from \"../../styles/page\";\r\nimport { Easing } from \"react-native-reanimated\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport RefactorFileName from \"../../helpers/refactorFileName\";\r\n\r\nconst CompBuilder = ({ route, navigation }) => {\r\n  const [comp, setComp] = useState([]);\r\n  const [traits, setTraits] = useState(0);\r\n  const { champions } = route.params;\r\n  const [isShrunk, setIsShrunk] = useState(true);\r\n  const topScrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setTraits(getCompTraits(comp));\r\n  }, [comp]);\r\n\r\n  const deneme = (item) => {\r\n    setComp([...comp, item]);\r\n  };\r\n\r\n  const topHeight = new Animated.Value(Dimensions.get(\"window\").height - 170);\r\n\r\n  let compComponent = [];\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    compComponent.push(\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          comp.length > 0 && comp[i] != undefined\r\n            ? [\r\n                setComp(\r\n                  comp.filter((item) => {\r\n                    return item != comp[i];\r\n                  })\r\n                ),\r\n                setTraits(getCompTraits(comp)),\r\n              ]\r\n            : null;\r\n        }}\r\n        key={i}\r\n      >\r\n        <View\r\n          style={[\r\n            pageTheme.builderChild,\r\n            {\r\n              backgroundColor:\r\n                comp[i] != undefined ? getChampBorderColor(comp[i]) : \"#1B475F\",\r\n            },\r\n          ]}\r\n        >\r\n          <Image\r\n            style={\r\n              comp[i] != undefined\r\n                ? pageTheme.builderChildAvatar\r\n                : { width: 18, height: 18 }\r\n            }\r\n            source={\r\n              comp[i] != undefined\r\n                ? avatars[RefactorFileName(comp[i])]\r\n                : require(\"../../assets/builder/plus.png\")\r\n            }\r\n          />\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  return champions != 0 ? (\r\n    <View style={pageTheme.centeredFlex}>\r\n      <Animated.View\r\n        style={{\r\n          height: topHeight,\r\n        }}\r\n      >\r\n        <ScrollView showsVerticalScrollIndicator={false} ref={topScrollRef}>\r\n          <View style={pageTheme.page}>\r\n            <Text style={pageTheme.title}>Team Comp Builder</Text>\r\n            <View style={[pageTheme.flexWrap, pageTheme.centeredFlex]}>\r\n              {compComponent}\r\n            </View>\r\n            {comp.length >= 1 ? (\r\n              <View\r\n                style={[\r\n                  pageTheme.centeredFlex,\r\n                  pageTheme.fdWrapperAIC,\r\n                  { marginTop: 10 },\r\n                ]}\r\n              >\r\n                <Text style={pageTheme.textBig}>{comp.length}/10</Text>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setComp([]);\r\n                    setTraits(0);\r\n                  }}\r\n                  style={[\r\n                    pageTheme.darkBGSmall,\r\n                    {\r\n                      paddingHorizontal: 5,\r\n                      marginLeft: 10,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Text style={pageTheme.textMed}>reset</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            ) : null}\r\n\r\n            <View style={pageTheme.section}>\r\n              <Text style={pageTheme.header}>Bonus</Text>\r\n              {traits.traits != undefined ? (\r\n                traits.traits.map((item, index) =>\r\n                  traits.details[index] != 0 ? (\r\n                    <View\r\n                      key={index}\r\n                      style={[pageTheme.fdWrapper, { marginVertical: 10 }]}\r\n                    >\r\n                      <View\r\n                        style={{\r\n                          width: 80,\r\n                          alignItems: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          numberOfLines={1}\r\n                          style={[\r\n                            pageTheme.textDetail,\r\n                            {\r\n                              marginTop: 0,\r\n                              textTransform: \"capitalize\",\r\n                              color: pageTheme.regularText.color,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          {traits.traits[index]}\r\n                        </Text>\r\n                        <Image\r\n                          style={pageTheme.avatarMed}\r\n                          source={\r\n                            origins[RefactorFileName(item, \"trait\")] !=\r\n                            undefined\r\n                              ? origins[RefactorFileName(item, \"trait\")]\r\n                              : classes[RefactorFileName(item, \"trait\")]\r\n                          }\r\n                        />\r\n                      </View>\r\n\r\n                      <View style={[pageTheme.fdWrapperAIC, { flex: 1 }]}>\r\n                        <Text\r\n                          style={[\r\n                            pageTheme.regularText,\r\n                            {\r\n                              color: traits.colors[index],\r\n                              marginTop: 0,\r\n                              fontFamily: \"RobotoBold\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          {traits.counts[index]}\r\n                        </Text>\r\n                        <Text\r\n                          style={[\r\n                            pageTheme.regularText,\r\n                            { marginTop: 0, marginHorizontal: 10, flex: 1 },\r\n                          ]}\r\n                        >\r\n                          {traits.details[index]}\r\n                        </Text>\r\n                      </View>\r\n                    </View>\r\n                  ) : null\r\n                )\r\n              ) : (\r\n                <Text style={pageTheme.regularText}>No bonus earned yet.</Text>\r\n              )}\r\n            </View>\r\n            <View style={pageTheme.section}>\r\n              <Text style={pageTheme.header}>All Traits</Text>\r\n              {traits.traits != undefined ? (\r\n                traits.traits.map((item, index) => (\r\n                  <View\r\n                    key={index}\r\n                    style={[pageTheme.fdWrapper, { marginVertical: 10 }]}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        alignItems: \"flex-start\",\r\n                        width: 80,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        numberOfLines={1}\r\n                        style={[\r\n                          pageTheme.textDetail,\r\n                          {\r\n                            marginTop: 0,\r\n                            textTransform: \"capitalize\",\r\n                            color: pageTheme.regularText.color,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        {item}\r\n                      </Text>\r\n                      <Image\r\n                        style={pageTheme.avatarMed}\r\n                        source={\r\n                          origins[RefactorFileName(item, \"trait\")] != undefined\r\n                            ? origins[RefactorFileName(item, \"trait\")]\r\n                            : classes[RefactorFileName(item, \"trait\")]\r\n                        }\r\n                      />\r\n                    </View>\r\n                    <View style={[pageTheme.fdWrapperAIC, { flex: 1 }]}>\r\n                      <Text\r\n                        style={[\r\n                          pageTheme.regularText,\r\n                          {\r\n                            color: traits.colors[index],\r\n                            marginTop: 0,\r\n                            fontFamily: \"RobotoBold\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        {traits.counts[index]}\r\n                      </Text>\r\n                      <Text\r\n                        style={[\r\n                          pageTheme.regularText,\r\n\r\n                          { marginTop: 0, marginHorizontal: 10, flex: 1 },\r\n                        ]}\r\n                      >\r\n                        {traits.details[index] != 0\r\n                          ? traits.details[index]\r\n                          : \"No bonus earned yet.\"}\r\n                      </Text>\r\n                    </View>\r\n                  </View>\r\n                ))\r\n              ) : (\r\n                <Text style={pageTheme.regularText}>\r\n                  Select champion to build a team comp.\r\n                </Text>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Animated.View>\r\n      <View style={{ flex: 1, elevation: 5, position: \"relative\" }}>\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          scrollEventThrottle={16}\r\n          alwaysBounceVertical={false}\r\n          bounces={false}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              topScrollRef.current?.scrollTo({\r\n                x: 0,\r\n                y: isShrunk ? 25 : 0,\r\n              });\r\n              Animated.timing(topHeight, {\r\n                toValue: isShrunk ? 200 : Dimensions.get(\"window\").height - 170,\r\n                duration: 666,\r\n                easing: Easing.linear,\r\n                delay: 0,\r\n                useNativeDriver: false,\r\n              }).start(() => {\r\n                setIsShrunk(!isShrunk);\r\n              });\r\n            }}\r\n            style={{\r\n              alignSelf: \"center\",\r\n              marginBottom: 0,\r\n              elevation: 1,\r\n              zIndex: 1,\r\n              backgroundColor: \"transparent\",\r\n            }}\r\n          >\r\n            <MaterialIcons\r\n              name={!isShrunk ? \"expand-more\" : \"expand-less\"}\r\n              size={32}\r\n              color=\"#fff\"\r\n            />\r\n          </TouchableOpacity>\r\n          <View\r\n            style={[\r\n              pageTheme.flexWrap,\r\n              pageTheme.centeredFlex,\r\n              {\r\n                backgroundColor: pageTheme.darkBGMedium.backgroundColor,\r\n                borderTopLeftRadius: 18,\r\n                borderTopRightRadius: 18,\r\n                paddingVertical: 10,\r\n                width: Dimensions.get(\"window\").width * 0.95,\r\n                elevation: -1,\r\n                zIndex: -1,\r\n                paddingTop: 5,\r\n              },\r\n            ]}\r\n          >\r\n            {champions.map((item, index) => (\r\n              <TouchableOpacity\r\n                key={index}\r\n                onPress={() => {\r\n                  comp.length < 10 && !comp.includes(item.name)\r\n                    ? deneme(item.name)\r\n                    : null;\r\n                }}\r\n              >\r\n                <View\r\n                  style={[\r\n                    pageTheme.darkBGSmall,\r\n                    {\r\n                      backgroundColor: !comp.includes(item.name)\r\n                        ? getChampBorderColor(item.name)\r\n                        : \"#123040\",\r\n                      margin: 2.5,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <ImageBackground\r\n                    style={pageTheme.avatarMed}\r\n                    source={avatars[RefactorFileName(item.name)]}\r\n                    imageStyle={{ opacity: comp.includes(item.name) ? 0.5 : 1 }}\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n};\r\n\r\nexport default CompBuilder;\r\n"]},"metadata":{},"sourceType":"module"}
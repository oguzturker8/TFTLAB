{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\components\\\\classAvatar.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport classes from \"../assets/classes/classes\";\nimport Tooltip from \"react-native-walkthrough-tooltip\";\nimport ClassDetails from \"./classdetails\";\nexport default function ClassAvatar(_ref) {\n  var Class = _ref.Class;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Tooltip, {\n    isVisible: isVisible,\n    content: React.createElement(ClassDetails, {\n      Class: Class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 18\n      }\n    }),\n    placement: \"center\",\n    onClose: function onClose() {\n      return setIsVisible(false);\n    },\n    contentStyle: styles.tooltip,\n    showChildInTooltip: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return setIsVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: classes[Class.name],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  tooltip: {\n    width: Dimensions.get(\"window\").width * 0.8,\n    height: \"auto\",\n    backgroundColor: \"#34495e\"\n  },\n  container: {\n    marginHorizontal: 5,\n    marginTop: 5,\n    elevation: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 5\n  },\n  logo: {\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 6\n  }\n});","map":{"version":3,"sources":["D:/Repos/TFTLAB/components/classAvatar.js"],"names":["React","useState","classes","Tooltip","ClassDetails","ClassAvatar","Class","isVisible","setIsVisible","styles","container","tooltip","logo","name","StyleSheet","create","width","Dimensions","get","height","backgroundColor","marginHorizontal","marginTop","elevation","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAQA,OAAOC,OAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,YAAP;AAEA,eAAe,SAASC,WAAT,OAAgC;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACXL,QAAQ,CAAC,KAAD,CADG;AAAA;AAAA,MACtCM,SADsC;AAAA,MAC3BC,YAD2B;;AAE7C,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEH,SADb;AAEE,IAAA,OAAO,EAAE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,OAAO,EAAE;AAAA,aAAME,YAAY,CAAC,KAAD,CAAlB;AAAA,KAJX;AAKE,IAAA,YAAY,EAAEC,MAAM,CAACE,OALvB;AAME,IAAA,kBAAkB,EAAE,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAE;AAAA,aAAMH,YAAY,CAAC,IAAD,CAAlB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,MAAM,CAACG,IAArB;AAA2B,IAAA,MAAM,EAAEV,OAAO,CAACI,KAAK,CAACO,IAAP,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF,CADF;AAgBD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,GADjC;AAEPG,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADsB;AAM/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,gBAAgB,EAAE,CADT;AAETC,IAAAA,SAAS,EAAE,CAFF;AAGTC,IAAAA,SAAS,EAAE,CAHF;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTT,IAAAA,KAAK,EAAE,CAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,IAAjC,GAAwC,EAAzC,IAA+C;AAN7C,GANoB;AAc/BJ,EAAAA,IAAI,EAAE;AACJI,IAAAA,KAAK,EAAE,CAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,IAAjC,GAAwC,EAAzC,IAA+C,CADlD;AAEJG,IAAAA,MAAM,EAAE,CAACF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,IAAjC,GAAwC,EAAzC,IAA+C;AAFnD;AAdyB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  View,\r\n  Dimensions,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport classes from \"../assets/classes/classes\";\r\nimport Tooltip from \"react-native-walkthrough-tooltip\";\r\nimport ClassDetails from \"./classdetails\";\r\n\r\nexport default function ClassAvatar({ Class }) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  return (\r\n    <View style={styles.container}>\r\n      <Tooltip\r\n        isVisible={isVisible}\r\n        content={<ClassDetails Class={Class} />}\r\n        placement=\"center\"\r\n        onClose={() => setIsVisible(false)}\r\n        contentStyle={styles.tooltip}\r\n        showChildInTooltip={false}\r\n      >\r\n        <TouchableHighlight onPress={() => setIsVisible(true)}>\r\n          <Image style={styles.logo} source={classes[Class.name]} />\r\n        </TouchableHighlight>\r\n      </Tooltip>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tooltip: {\r\n    width: Dimensions.get(\"window\").width * 0.8,\r\n    height: \"auto\",\r\n    backgroundColor: \"#34495e\",\r\n  },\r\n  container: {\r\n    marginHorizontal: 5,\r\n    marginTop: 5,\r\n    elevation: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 5,\r\n  },\r\n  logo: {\r\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\r\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
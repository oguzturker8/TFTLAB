{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repos\\\\TFTLAB\\\\components\\\\championAvatar.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport avatars from \"../assets/avatars/avatars\";\nimport Tooltip from \"react-native-walkthrough-tooltip\";\nimport ChampDetails from \"./champdetails\";\nexport default function ChampionAvatar(_ref) {\n  var name = _ref.name,\n      gold = _ref.gold,\n      origin = _ref.origin,\n      type = _ref.type,\n      skill = _ref.skill,\n      details = _ref.details;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: [styles.container, gold === 1 ? {\n      backgroundColor: \"#213042\"\n    } : gold === 2 ? {\n      backgroundColor: \"#156831\"\n    } : gold === 3 ? {\n      backgroundColor: \"#12407c\"\n    } : gold === 4 ? {\n      backgroundColor: \"#893088\"\n    } : {\n      backgroundColor: \"#b89d27\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Tooltip, {\n    isVisible: isVisible,\n    content: React.createElement(ChampDetails, {\n      name: name,\n      gold: gold,\n      origin: origin,\n      type: type,\n      skill: skill,\n      details: details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }),\n    placement: \"center\",\n    onClose: function onClose() {\n      return setIsVisible(false);\n    },\n    contentStyle: styles.tooltip,\n    showChildInTooltip: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return setIsVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: avatars[name],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  tooltip: {\n    width: Dimensions.get(\"window\").width * 0.8,\n    height: \"auto\",\n    backgroundColor: \"#34495e\"\n  },\n  container: {\n    marginLeft: 5,\n    marginTop: 5,\n    elevation: 5,\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 5.5,\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 5.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  logo: {\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 6\n  }\n});","map":{"version":3,"sources":["D:/Repos/TFTLAB/components/championAvatar.js"],"names":["React","useState","avatars","Tooltip","ChampDetails","ChampionAvatar","name","gold","origin","type","skill","details","isVisible","setIsVisible","styles","container","backgroundColor","tooltip","logo","StyleSheet","create","width","Dimensions","get","height","marginLeft","marginTop","elevation","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  View,\r\n  Dimensions,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport avatars from \"../assets/avatars/avatars\";\r\nimport Tooltip from \"react-native-walkthrough-tooltip\";\r\nimport ChampDetails from \"./champdetails\";\r\n\r\nexport default function ChampionAvatar({\r\n  name,\r\n  gold,\r\n  origin,\r\n  type,\r\n  skill,\r\n  details,\r\n}) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.container,\r\n        gold === 1\r\n          ? { backgroundColor: \"#213042\" }\r\n          : gold === 2\r\n          ? { backgroundColor: \"#156831\" }\r\n          : gold === 3\r\n          ? { backgroundColor: \"#12407c\" }\r\n          : gold === 4\r\n          ? { backgroundColor: \"#893088\" }\r\n          : { backgroundColor: \"#b89d27\" },\r\n      ]}\r\n    >\r\n      <Tooltip\r\n        isVisible={isVisible}\r\n        content={\r\n          <ChampDetails\r\n            name={name}\r\n            gold={gold}\r\n            origin={origin}\r\n            type={type}\r\n            skill={skill}\r\n            details={details}\r\n          />\r\n        }\r\n        placement=\"center\"\r\n        onClose={() => setIsVisible(false)}\r\n        contentStyle={styles.tooltip}\r\n        showChildInTooltip={false}\r\n      >\r\n        <TouchableHighlight onPress={() => setIsVisible(true)}>\r\n          <Image style={styles.logo} source={avatars[name]} />\r\n        </TouchableHighlight>\r\n      </Tooltip>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tooltip: {\r\n    width: Dimensions.get(\"window\").width * 0.8,\r\n    height: \"auto\",\r\n    backgroundColor: \"#34495e\",\r\n  },\r\n  container: {\r\n    marginLeft: 5,\r\n    marginTop: 5,\r\n    elevation: 5,\r\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 5.5,\r\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 5.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  logo: {\r\n    width: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\r\n    height: (Dimensions.get(\"window\").width * 0.75 - 60) / 6,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}